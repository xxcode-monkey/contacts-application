<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>example.apps</groupId>
		<artifactId>contacts-application</artifactId>
		<version>1.0.0.RELEASE</version>
	</parent>

	<artifactId>repository-example</artifactId>
	<packaging>jar</packaging>

	<name>Repository Example</name>
	<description>
		The Repository Example module for the Contacts Application project contains examples of
		Spring Data GemFire's Repository implementation and extension to Spring Data Commons' Repository abstraction
		and infrastructure.
	</description>
	<url>http://docs.spring.io/spring-data/data-commons/docs/current/reference/html/#repositories</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<organization>
		<name>Pivotal Software, Inc.</name>
		<url>http://www.pivotal.io</url>
	</organization>

	<developers>
		<developer>
			<id>jblum</id>
			<name>John Blum</name>
			<email>jblum at pivotal dot io</email>
			<organization>Pivotal Software, Inc.</organization>
			<organizationUrl>http://www.spring.io</organizationUrl>
			<roles>
				<role>Spring Data Team</role>
				<role>Spring Data Cassandra Project Lead (Committer)</role>
				<role>Spring Data GemFire Project Lead (Committer)</role>
				<role>Spring Data Geode Project Lead (Committer)</role>
				<role>Apache Geode Committer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>example.apps</groupId>
			<artifactId>contacts-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-gemfire</artifactId>
		</dependency>
-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-atomikos</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-gemfire</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.shell</groupId>
			<artifactId>spring-shell</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>post-build-exec</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<inherited>false</inherited>
					</execution>
				</executions>
				<configuration>
<!--
					<executable>rm -Rf `find . -name "transaction-logs"`</executable>
					<executable>bash 'rm -Rf transaction-logs'</executable>
-->
					<executable>./bin/post-build.sh</executable>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
